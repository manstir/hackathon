@model Surrogat.Areas.Person.ViewModels.AccountViewModel
@{
    Layout = "~/Areas/Person/Views/Shared/_PersonLayout.cshtml";
}

<h2>Account Overview '@Model.Fullname()'</h2>

@using (Html.BeginForm("Withdraw", "Person", FormMethod.Post, new { @class = "form-inline"}))
{
    <div class="form-group">
        <label class="sr-only" for="exampleInputAmount">Amount (in CHF)</label>
        <div class="input-group">
            <div class="input-group-addon">CHF</div>
            @Html.TextBoxFor(m => m.WithdrawAmount, new {@class = "form-control"})
        </div>
    </div>
    @Html.HiddenFor(m => m.Person.Id)
    <button type="submit" class="btn btn-primary">Withdraw</button>
}

<h2>Transactions</h2>
<table class="table table-striped table-hover">
    <thead>
    <tr>
        <th>Withdrawn On</th>
        <th>Amount</th>
        <th>Cashed On</th>
    </tr>
    </thead>
    <tbody>
        @foreach (var transaction in Model.Person.Transactions.OrderByDescending(t => t.WithdrawDate))
        {
            <tr>
                <td>@transaction.WithdrawDate</td>
                <td>@transaction.Amount</td>
                <td>@(transaction.CashedDate.HasValue ? transaction.CashedDate.Value.ToString() : string.Empty)</td>
            </tr>
        }
    </tbody>
</table>
